{"version":3,"sources":["Card/index.js","helpers/renderer.js","helpers/history.js","Choice/index.js","helpers/util.js","Branch/index.js","Play/index.js","Load/index.js","App/styles.js","helpers/api.js","helpers/querystring.js","App/index.js","Theme/index.js","index.js"],"names":["Card","this","props","children","classes","className","whiteSpace","Paper","spacing","join","Component","defaultProps","withStyles","markedRenderer","theme","margin","padding","breakpoints","up","browserHistory","createBrowserHistory","Choice","onClick","choiceId","currentId","search","history","location","replace","push","Button","button","color","letterSpacing","textAlign","textTransform","getKey","value","Object","key","getValue","obj","removeNewlines","string","trim","render","input","format","element","React","createElement","dangerouslySetInnerHTML","__html","window","marked","Renderer","link","href","title","text","headerIds","renderer","Branch","choices","config","id","Array","map","choice","index","marginTop","typography","pxToRem","Play","branches","branch","initialState","error","placeholder","origin","Load","state","message","onClose","setState","handleChange","event","target","newState","URL","onSubmit","preventDefault","encodeURIComponent","Snackbar","autoHideDuration","open","Boolean","Typography","gutterBottom","variant","TextField","autoFocus","fullWidth","helperText","InputLabelProps","shrink","label","name","onChange","required","spellCheck","type","size","styles","palette","marginBottom","h1","h2","h3","h4","h5","h6","body2","fontFamily","border","grey","borderRadius","fontStyle","display","fontWeight","fontWeightMedium","grid","maxWidth","progress","options","mode","getStory","url","fetch","then","response","ok","Error","statusText","status","jsyaml","load","story","TypeError","slice","split","reduce","accumulator","field","decodeURIComponent","undefined","object","keys","defaultConfig","start","isLoading","App","historyListener","searchParams","querystring","hasLoaded","loadStory","_config","catch","process","selectChoice","unlisten","listen","contentNode","length","LinearProgress","CssBaseline","Grid","container","justify","item","xs","createMuiTheme","fontSize","Theme","document","getElementById"],"mappings":"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","file":"static/js/main.deee7375.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\n\n/**\n * Card styles.\n *\n * @param  {Object} theme\n * @return {Object}\n */\nconst styles = theme => {\n  const { spacing } = theme;\n\n  return {\n    spacing: {\n      margin: spacing(2), // 16px\n      padding: spacing(3), // 24px\n\n      // @media (min-width: 600px)\n      [theme.breakpoints.up('md')]: {\n        margin: spacing(4), // 32px\n      },\n    },\n    'pre-line': {\n      // preserve new lines, collapse spaces and tabs, allow text wrapping\n      // https://developer.mozilla.org/docs/Web/CSS/white-space\n      whiteSpace: 'pre-line',\n    },\n  };\n};\n\nclass Card extends Component {\n  static defaultProps = {\n    whiteSpace: 'pre-line',\n  };\n\n  render() {\n    const { children, classes, className, whiteSpace } = this.props;\n\n    return (\n      <Paper\n        className={[classes.spacing, classes[whiteSpace], className].join(' ')}\n      >\n        {children}\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(Card);\n","import React from 'react';\n\nexport let markedRenderer;\n\n/**\n * Removes newlines from string.\n *\n * @param  {String} string\n * @return {String}\n */\nconst removeNewlines = string => string.trim().replace(/\\n/g, '');\n\n/**\n * Renders text based on format.\n *\n * @param  {String}              input\n * @param  {String}              [format=\"text\"]\n * @param  {String}              [element]\n * @return {String|ReactElement}\n */\nconst render = (input, format = 'text', element) => {\n  switch (format) {\n    case 'html':\n      return React.createElement(element || 'div', {\n        dangerouslySetInnerHTML: { __html: removeNewlines(input) },\n      });\n\n    case 'markdown':\n      if (!markedRenderer) {\n        markedRenderer = new window.marked.Renderer();\n\n        /**\n         * @see {@link https://github.com/markedjs/marked/blob/master/docs/USING_PRO.md#inline-level-renderer-methods|link}\n         * @param  {String} href\n         * @param  {String} [title]\n         * @param  {String} text\n         * @return {String}\n         */\n        markedRenderer.link = (href, title, text) =>\n          `<a href=\"${href}\" rel=\"noreferrer noopener\" target=\"_blank\">${text}</a>`;\n      }\n\n      return React.createElement(element || 'div', {\n        dangerouslySetInnerHTML: {\n          __html: removeNewlines(\n            window.marked(input, {\n              headerIds: false,\n              renderer: markedRenderer,\n            })\n          ),\n        },\n      });\n\n    case 'text':\n    default:\n      return element ? React.createElement(element, null, input) : input;\n  }\n};\n\nexport default render;\n","import { createBrowserHistory } from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport history from '../helpers/history';\n\nconst styles = {\n  button: {\n    letterSpacing: 'initial',\n    textAlign: 'left',\n    textTransform: 'none',\n  },\n};\n\nclass Choice extends Component {\n  /**\n   * Selects choice.\n   */\n  onClick = () => {\n    const { choiceId, currentId } = this.props;\n    const search = history.location.search.replace(\n      `id=${currentId}`,\n      `id=${choiceId}`\n    );\n    history.push(search);\n  };\n\n  render() {\n    const { children, className, classes } = this.props;\n    return (\n      <Button\n        className={[classes.button, className].join(' ')}\n        color=\"primary\"\n        onClick={this.onClick}\n      >\n        {children}\n      </Button>\n    );\n  }\n}\n\nexport default withStyles(styles)(Choice);\n","/**\n * Gets key.\n *\n * @param  {String|Object} value\n * @return {String}\n */\nexport const getKey = value => {\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  // return first property key\n  if (value instanceof Object) {\n    for (let key in value) {\n      return key;\n    }\n  }\n};\n\n/**\n * Gets value.\n *\n * @param  {Object} obj\n * @return {*}\n */\nexport const getValue = obj => {\n  // return first property value\n  if (obj instanceof Object) {\n    for (let key in obj) {\n      return obj[key];\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '../Card';\nimport Choice from '../Choice';\nimport { getKey, getValue } from '../helpers/util';\nimport render from '../helpers/renderer';\n\nexport const branchClass = 'branch';\n\n/**\n * @param  {Object} theme\n * @return {Object}\n */\nconst styles = theme => {\n  const { spacing, typography } = theme;\n  return {\n    choices: {\n      marginTop: typography.pxToRem(spacing(2)),\n    },\n  };\n};\n\nclass Branch extends Component {\n  static defaultProps = {\n    config: {},\n  };\n\n  render() {\n    const {\n      choices,\n      classes,\n      config: { renderer },\n      id,\n      text,\n    } = this.props;\n\n    return (\n      <Card>\n        <div className={branchClass}>\n          {text && render(text, renderer, renderer === 'text' ? 'p' : 'div')}\n        </div>\n\n        {choices instanceof Array && (\n          <div className={classes.choices}>\n            {choices.map((choice, index) => (\n              <Choice choiceId={getValue(choice)} currentId={id} key={index}>\n                {render(getKey(choice), renderer, 'span')}\n              </Choice>\n            ))}\n          </div>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(Branch);\n","import React, { Component } from 'react';\nimport Branch from '../Branch';\nimport { getKey, getValue } from '../helpers/util';\n\nexport default class Play extends Component {\n  render() {\n    const { branches, config, id } = this.props;\n    const branch = branches[id];\n    const choices = getValue(branch);\n    const text = getKey(branch);\n\n    return (\n      <main>\n        <Branch choices={choices} config={config} id={id} text={text} />\n      </main>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '../Card';\nimport history from '../helpers/history';\n\nconst initialState = {\n  error: '',\n  value: '',\n};\n\nconst placeholder =\n  window.location.origin + process.env.PUBLIC_URL + '/demo.yaml';\n\nexport default class Load extends Component {\n  state = {\n    ...initialState,\n    message: '',\n  };\n\n  /**\n   * Handles snackbar close.\n   */\n  onClose = () => this.setState({ message: '' });\n\n  /**\n   * Handles input change.\n   *\n   * @param {SyntheticEvent} event\n   */\n  handleChange = event => {\n    const { value } = event.target;\n    const newState = {\n      ...initialState,\n      value,\n    };\n    try {\n      new URL(value);\n    } catch (error) {\n      newState.error = 'Invalid URL';\n    }\n    this.setState(newState);\n  };\n\n  /**\n   * Handles form submit.\n   *\n   * @param {SyntheticEvent} event\n   */\n  onSubmit = event => {\n    event.preventDefault();\n    history.push(`?url=${encodeURIComponent(this.state.value)}`);\n  };\n\n  render() {\n    const { error, message, value } = this.state;\n    return (\n      <Card>\n        {message && (\n          <Snackbar\n            autoHideDuration={6000}\n            message={message}\n            onClose={this.onClose}\n            open={Boolean(message)}\n          />\n        )}\n\n        <form onSubmit={this.onSubmit}>\n          <Typography gutterBottom variant=\"h5\">\n            Load Story\n          </Typography>\n\n          <TextField\n            autoFocus\n            error={Boolean(error)}\n            fullWidth\n            helperText={error}\n            InputLabelProps={{ shrink: true }}\n            label=\"URL\"\n            margin=\"normal\"\n            name=\"url\"\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            required\n            spellCheck={false}\n            type=\"url\"\n            value={value}\n          />\n          <br />\n          <br />\n\n          <Button\n            color=\"primary\"\n            size=\"medium\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Load\n          </Button>\n        </form>\n      </Card>\n    );\n  }\n}\n","import { branchClass } from '../Branch';\nconst branchSelector = '.' + branchClass;\n\n/**\n * App styles.\n *\n * @param  {Object} theme\n * @return {Object}\n */\nconst styles = theme => {\n  const { palette, spacing, typography } = theme;\n  const { pxToRem } = typography;\n  const marginBottom = pxToRem(spacing(2));\n\n  const styles = {\n    '@global': {\n      [branchSelector]: {\n        '& h1': {\n          ...typography.h1,\n          marginBottom,\n        },\n        '& h2': {\n          ...typography.h2,\n          marginBottom,\n        },\n        '& h3': {\n          ...typography.h3,\n          marginBottom,\n        },\n        '& h4': {\n          ...typography.h4,\n          marginBottom,\n        },\n        '& h5': {\n          ...typography.h5,\n          marginBottom,\n        },\n        '& h6': {\n          ...typography.h6,\n          marginBottom,\n        },\n        '& p': {\n          ...typography.body2,\n          letterSpacing: 'initial',\n          marginBottom: pxToRem(spacing(1)),\n        },\n      },\n\n      code: {\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        border: `1px solid ${palette.grey[400]}`,\n        borderRadius: 3,\n        padding: '3px 6px',\n      },\n      em: {\n        fontStyle: 'italic',\n      },\n      main: {\n        display: 'block', // fix for IE 9-11\n      },\n      strong: {\n        fontWeight: typography.fontWeightMedium,\n      },\n    },\n\n    grid: {\n      maxWidth: 720,\n    },\n\n    progress: {\n      marginTop: spacing(4), // 32px\n    },\n  };\n\n  return styles;\n};\n\nexport default styles;\n","const options = {\n  mode: 'cors',\n};\n\n/**\n * Gets story from URL.\n *\n * @param  {String} url\n * @return {Promise}\n */\nexport const getStory = url => {\n  return fetch(url, options)\n    .then(response => {\n      if (response.ok) {\n        return response.text();\n      }\n      throw new Error('URL: ' + (response.statusText || response.status));\n    })\n    .then(text => {\n      try {\n        return window.jsyaml.load(text);\n      } catch (error) {\n        throw new Error('YAML: Unable to parse');\n      }\n    })\n    .then(story => {\n      if (!(story instanceof Object)) {\n        throw new Error('YAML: Missing values');\n      }\n      return story;\n    });\n};\n","/**\n * The beginning character of the query string.\n *\n * @constant {String}\n */\nconst QUESTION_MARK = '?';\n\n/**\n * The substring used to delimit key and value pairs in the query string.\n *\n * @constant {String}\n */\nconst SEPARATOR = '&';\n\n/**\n * The substring used to delimit keys and values in the query string.\n *\n * @constant {String}\n */\nconst EQUAL = '=';\n\n/**\n * Parses a URL query string into a collection of key and value pairs.\n *\n * @see {@link https://nodejs.org/api/querystring.html#querystring_querystring_parse_str_sep_eq_options querystring.parse}\n *\n * @param  {String} string - The URL query string to parse.\n * @return {Object}\n */\nexport const parse = string => {\n  if (typeof string !== 'string') {\n    throw TypeError('First argument must be a string');\n  }\n\n  if (string[0] === QUESTION_MARK) {\n    string = string.slice(1);\n  }\n\n  if (!string) {\n    return {};\n  }\n\n  return string.split(SEPARATOR).reduce((accumulator, field) => {\n    let [key, value] = field.split(EQUAL);\n    key = decodeURIComponent(key);\n\n    if (value === undefined) {\n      value = '';\n    } else {\n      value = decodeURIComponent(value);\n    }\n\n    switch (typeof accumulator[key]) {\n      // new key-value\n      case 'undefined':\n        accumulator[key] = value;\n        break;\n\n      // existing key-value, convert to array\n      case 'string':\n        accumulator[key] = [accumulator[key], value];\n        break;\n\n      // existing key-values, push to array\n      case 'object':\n        accumulator[key].push(value);\n        break;\n\n      // no default\n    }\n\n    return accumulator;\n  }, {});\n};\n\n/**\n * Produces a URL query string from a given object.\n *\n * @see {@link https://nodejs.org/api/querystring.html#querystring_querystring_stringify_obj_sep_eq_options querystring.stringify}\n *\n * @param  {Object} object - The object to serialize into a URL query string.\n * @return {String}\n */\nexport const stringify = object => {\n  if (!object || typeof object !== 'object') {\n    throw TypeError('First argument must be an object');\n  }\n\n  const fields = Object.keys(object).reduce((accumulator, key) => {\n    let value = object[key];\n    if (value === undefined || value === null) {\n      value = '';\n    }\n    accumulator.push(\n      encodeURIComponent(key) + EQUAL + encodeURIComponent(value)\n    );\n    return accumulator;\n  }, []);\n\n  return QUESTION_MARK + fields.join(SEPARATOR);\n};\n\nexport default {\n  parse,\n  stringify,\n};\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Play from '../Play';\nimport Load from '../Load';\nimport styles from './styles';\nimport { getStory } from '../helpers/api';\nimport history from '../helpers/history';\nimport querystring from '../helpers/querystring';\n\n// default textventure config\nexport const defaultConfig = {\n  renderer: 'text',\n  start: 'start',\n};\n\nexport const initialState = {\n  branches: {},\n  config: defaultConfig,\n  id: defaultConfig.start,\n  isLoading: false,\n};\n\nclass App extends Component {\n  state = initialState;\n\n  componentDidMount() {\n    // invoke listener with browser history location\n    this.historyListener(history.location);\n\n    // subscribe to browser history listener\n    this.unlisten = history.listen(this.historyListener);\n  }\n\n  componentWillUnmount() {\n    // unsubscribe from browser history listener\n    this.unlisten();\n  }\n\n  /**\n   * Listens to browser history navigation events.\n   *\n   * @param {Object} location\n   * @param {String} location.hash\n   * @param {String} location.pathname\n   * @param {String} location.search\n   * @param {*}      location.state\n   */\n  historyListener = location => {\n    const searchParams = querystring.parse(location.search);\n    if (!searchParams.url) {\n      this.setState(initialState);\n      return;\n    }\n\n    if (this.hasLoaded) {\n      const { id } = searchParams;\n      if (id && id !== this.state.id) {\n        this.setState({ id });\n      }\n      return;\n    }\n\n    this.setState({ isLoading: true }, () => {\n      this.loadStory(searchParams.url, searchParams);\n    });\n  };\n\n  /**\n   * Fetches and loads story.\n   *\n   * @param  {String}  url\n   * @param  {Object}  [searchParams={}]\n   * @param  {String}  [searchParams.id]\n   * @return {Promise}\n   */\n  loadStory = (url, searchParams = {}) => {\n    this.hasLoaded = true;\n\n    return getStory(url)\n      .then(story => {\n        const { _config: config, ...branches } = story;\n        const newState = { isLoading: false };\n\n        if (!branches || !config) {\n          this.setState(newState);\n          return;\n        }\n\n        newState.branches = branches;\n        newState.config = {\n          ...defaultConfig,\n          ...config,\n        };\n\n        if (searchParams.id) {\n          // use branch id from location search\n          newState.id = searchParams.id;\n        } else {\n          // or use start id and set in location search\n          newState.id = config.start || defaultConfig.start;\n          history.push(\n            querystring.stringify({\n              ...searchParams,\n              id: newState.id,\n            })\n          );\n        }\n\n        this.setState(newState);\n      })\n      .catch(() => {\n        this.hasLoaded = false;\n        this.setState({ isLoading: false }, () =>\n          history.push(process.env.PUBLIC_URL)\n        );\n      });\n  };\n\n  /**\n   * Updates next story branch id based on selected choice id.\n   *\n   * @param {String} id\n   */\n  selectChoice = id => this.setState({ id });\n\n  render() {\n    const { classes } = this.props;\n    const { branches, config, id, isLoading } = this.state;\n    let contentNode;\n\n    if (Object.keys(branches).length) {\n      contentNode = <Play branches={branches} config={config} id={id} />;\n    } else if (isLoading) {\n      contentNode = (\n        <div className={classes.progress}>\n          <LinearProgress />\n        </div>\n      );\n    } else {\n      contentNode = <Load />;\n    }\n\n    return (\n      <CssBaseline>\n        <Grid container justify=\"center\">\n          <Grid item xs={12} className={classes.grid}>\n            {contentNode}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    );\n  }\n}\n\nApp = withStyles(styles)(App);\n\n/* istanbul ignore if */\nif (process.env.NODE_ENV === 'development') {\n  const { hot } = require('react-hot-loader');\n  App = hot(module)(App);\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: 18,\n  },\n});\n\nexport default class Theme extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>{this.props.children}</MuiThemeProvider>\n    );\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport Theme from './Theme';\n// import registerServiceWorker from './registerServiceWorker';\n\nrender(\n  <Theme>\n    <App />\n  </Theme>,\n  document.getElementById('root')\n);\n\n// registerServiceWorker();\n"],"sourceRoot":""}